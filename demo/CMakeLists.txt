cmake_minimum_required(VERSION 3.11.0)
project(libQuestMR_demo VERSION 1.0.0 LANGUAGES CXX)
set(CMAKE_CXX_STANDARD 11)

set(CMAKE_DEBUG_POSTFIX "d")

find_package(BufferedSocket REQUIRED)
message("BufferedSocket dir: ${BufferedSocket_DIR}")
set(BufferedSocket_INCLUDE_DIR ${BufferedSocket_DIR}/../../../include)
include_directories(${BufferedSocket_INCLUDE_DIR})

find_package(libQuestMR REQUIRED)
message("libQuestMR dir: ${libQuestMR_DIR}")
set(libQuestMR_INCLUDE_DIR ${libQuestMR_DIR}/../../../include)
include_directories(${libQuestMR_INCLUDE_DIR} ${libQuestMR_INCLUDE_DIR})

option(USE_RPCameraInterface "Use RPCameraInterface" ON)
option(USE_DEPTHAI "Use DepthAI" OFF)

if(USE_DEPTHAI)
	find_package(depthai CONFIG REQUIRED)
endif()

find_package(OpenCV REQUIRED video dnn calib3d highgui)

if(USE_RPCameraInterface)
	find_package(RPCameraInterface REQUIRED)
	message("RPCameraInterface include dir: ${RPCameraInterface_DIR}")
	set(RPCameraInterface_INCLUDE_DIR ${RPCameraInterface_DIR}/../../../include)
	include_directories(${RPCameraInterface_INCLUDE_DIR})
endif()

include_directories(${BufferedSocket})

add_executable(demo-connectToMRC demo-connectToMRC.cpp)
add_executable(demo-connectToMRC-raw demo-connectToMRC-raw.cpp)
add_executable(demo-capture demo-capture.cpp)
add_executable(demo-playback demo-playback.cpp)
add_executable(demo-loadQuestCalib demo-loadQuestCalib.cpp)
add_executable(demo-uploadQuestCalib demo-uploadQuestCalib.cpp)
add_executable(demo-calibrateCameraIntrinsic-cv demo-calibrateCameraIntrinsic-cv.cpp calibration_helper.h calibration_helper.cpp)
if(USE_RPCameraInterface)
	add_executable(demo-calibrateCameraIntrinsic-RPCam demo-calibrateCameraIntrinsic-RPCam.cpp calibration_helper.h calibration_helper.cpp)
	add_executable(demo-calibrateCameraExtrinsic-RPCam demo-calibrateCameraExtrinsic-RPCam.cpp RPCam_helper.h RPCam_helper.cpp)
	add_executable(demo-calibrateCameraFull-RPCam demo-calibrateCameraFull-RPCam.cpp RPCam_helper.h RPCam_helper.cpp)
	add_executable(demo-testCalib-RPCam demo-testCalib-RPCam.cpp RPCam_helper.h RPCam_helper.cpp)
	add_executable(demo-capture-RPCam demo-capture-RPCam.cpp RPCam_helper.h RPCam_helper.cpp)
	add_executable(demo-captureRaw-RPCam demo-captureRaw-RPCam.cpp RPCam_helper.h RPCam_helper.cpp)
	add_executable(demo-processRawCapture demo-processRawCapture.cpp RPCam_helper.h RPCam_helper.cpp)
	add_executable(demo-processRawCaptureAudio demo-processRawCaptureAudio.cpp RPCam_helper.h RPCam_helper.cpp)
	add_executable(demo-chromakey-RPCam demo-chromakey-RPCam.cpp RPCam_helper.h RPCam_helper.cpp)
	add_executable(demo-segmentation-RPCam demo-segmentation-RPCam.cpp RPCam_helper.h RPCam_helper.cpp)
endif()

target_link_libraries(demo-connectToMRC PRIVATE ${OpenCV_LIBS})
target_link_libraries(demo-connectToMRC LINK_PUBLIC libQuestMR BufferedSocket)
target_link_libraries(demo-connectToMRC-raw PRIVATE ${OpenCV_LIBS})
target_link_libraries(demo-connectToMRC-raw LINK_PUBLIC libQuestMR BufferedSocket)
target_link_libraries(demo-capture PRIVATE ${OpenCV_LIBS})
target_link_libraries(demo-capture LINK_PUBLIC libQuestMR BufferedSocket)
target_link_libraries(demo-playback PRIVATE ${OpenCV_LIBS})
target_link_libraries(demo-playback LINK_PUBLIC libQuestMR BufferedSocket)
target_link_libraries(demo-loadQuestCalib PRIVATE ${OpenCV_LIBS})
target_link_libraries(demo-loadQuestCalib LINK_PUBLIC libQuestMR BufferedSocket)
target_link_libraries(demo-uploadQuestCalib PRIVATE ${OpenCV_LIBS})
target_link_libraries(demo-uploadQuestCalib LINK_PUBLIC libQuestMR BufferedSocket)
target_link_libraries(demo-calibrateCameraIntrinsic-cv PRIVATE ${OpenCV_LIBS})
target_link_libraries(demo-calibrateCameraIntrinsic-cv LINK_PUBLIC libQuestMR BufferedSocket)
if(USE_RPCameraInterface)
	target_link_libraries(demo-calibrateCameraIntrinsic-RPCam PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-calibrateCameraIntrinsic-RPCam LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-calibrateCameraExtrinsic-RPCam PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-calibrateCameraExtrinsic-RPCam LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-calibrateCameraFull-RPCam PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-calibrateCameraFull-RPCam LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-testCalib-RPCam PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-testCalib-RPCam LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-capture-RPCam PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-capture-RPCam LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-captureRaw-RPCam PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-captureRaw-RPCam LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-processRawCapture PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-processRawCapture LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-processRawCaptureAudio PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-processRawCaptureAudio LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-chromakey-RPCam PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-chromakey-RPCam LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
	target_link_libraries(demo-segmentation-RPCam PRIVATE ${OpenCV_LIBS})
	target_link_libraries(demo-segmentation-RPCam LINK_PUBLIC libQuestMR BufferedSocket RPCameraInterface)
endif()


if(NOT MSVC)
	set(CMAKE_THREAD_LIBS_INIT "-lpthread")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")
endif()
set(CMAKE_HAVE_THREADS_LIBRARY 1)
set(CMAKE_USE_WIN32_THREADS_INIT 0)
set(CMAKE_USE_PTHREADS_INIT 1)
set(THREADS_PREFER_PTHREAD_FLAG ON)


